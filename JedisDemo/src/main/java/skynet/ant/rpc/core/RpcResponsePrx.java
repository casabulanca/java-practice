// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `RpcChannel.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package skynet.ant.rpc.core;

/**
 * 会话响应（回调）
 **/
public interface RpcResponsePrx extends Ice.ObjectPrx
{
    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @return 会话状态
     **/
    public RpcStatus callback(RpcResult result);

    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @param __ctx The Context map to send with the invocation.
     * @return 会话状态
     **/
    public RpcStatus callback(RpcResult result, java.util.Map<String, String> __ctx);

    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_callback(RpcResult result);

    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_callback(RpcResult result, java.util.Map<String, String> __ctx);

    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_callback(RpcResult result, Ice.Callback __cb);

    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_callback(RpcResult result, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_callback(RpcResult result, Callback_RpcResponse_callback __cb);

    /**
     * 会话结果回调 
     * @param result 响应结果 
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_callback(RpcResult result, java.util.Map<String, String> __ctx, Callback_RpcResponse_callback __cb);

    /**
     * 会话结果回调 
     * @param __result The asynchronous result object.
     * @return 会话状态
     **/
    public RpcStatus end_callback(Ice.AsyncResult __result);
}
